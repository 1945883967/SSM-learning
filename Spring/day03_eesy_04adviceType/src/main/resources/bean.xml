<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--配置Spring的IOC，把service对象配置进来-->
    <bean id="accountService" class="com.minghai.service.impl.AccountServiceImpl"></bean>


    <!--配置Logger类-->
    <bean id="logger" class="com.minghai.utils.Logger"></bean>


    <!--配置aop-->
    <aop:config>

        <!--配置切入点表达式:id属性用于指定表达式的唯一标识，expression属性用于指定表达式的内容
               此标签写在aop:aspect内部，只能当前切面使用标签中使用
               它还能写在aop:aspect外面，此时变成了所有切面可用。
                    注意：写在外面使，只能写在它被引用之前（xml约束中规定）
           -->
        <aop:pointcut id="pt1" expression="execution(* com.minghai.service.impl.*.*(..))"></aop:pointcut>

        <!--配置切面-->
        <aop:aspect id="logAdvice" ref="logger">
            <!--配置前置通知:切入点方法执行之前执行
            <aop:before method="beforePrintLog" pointcut-ref="pt1" ></aop:before>-->

            <!--配置后置通知：在切入点方法执行之后执行     他和异常通知永远只能执行一个
            <aop:after-returning method="afterePrintLog" pointcut-ref="pt1" ></aop:after-returning>-->

            <!--配置异常通知：在切入点方法执行产生异常之后执行     他和后置通知永远只能执行一个
            <aop:after-throwing method="afterThrowingPrintLog" pointcut-ref="pt1" ></aop:after-throwing>-->

            <!--配置最终通知：无论切入点方法是否正常执行他都会在其后面执行
            <aop:after method="afterFinalPrintLog" pointcut-ref="pt1" ></aop:after>-->

            <!--配置环绕通知 详细的注释请看Logger类中-->
            <aop:around method="aroundPrintLog" pointcut-ref="pt1"></aop:around>
        </aop:aspect>

    </aop:config>
</beans>